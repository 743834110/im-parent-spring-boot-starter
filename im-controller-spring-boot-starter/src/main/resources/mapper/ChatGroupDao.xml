<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.berby.im.dao.ChatGroupDao">

    <resultMap type="xyz.berby.im.entity.ChatGroup" id="ChatGroupMap">
        <result property="groupId" column="group_id" jdbcType="VARCHAR"/>
        <result property="orgId" column="org_id" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ChatGroupMap">
        select
          group_id, org_id, user_id, name, avatar
        from imserver.chat_group
        where group_id = #{groupId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ChatGroupMap">
        select
          group_id, org_id, user_id, name, avatar
        from imserver.chat_group
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="ChatGroupMap">
        select
          group_id, org_id, user_id, name, avatar
        from imserver.chat_group
        <where>
            <if test="groupId != null and groupId != ''">
                and group_id = #{groupId}
            </if>
            <if test="orgId != null and orgId != ''">
                and org_id = #{orgId}
            </if>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="avatar != null and avatar != ''">
                and avatar = #{avatar}
            </if>
        </where>
    </select>
    
    <!--通过分页对象作为筛选条件查询-->
    <select id="queryByPager" resultMap="ChatGroupMap">
        select
          group_id, org_id, user_id, name, avatar
        from imserver.chat_group
        <where>
            <if test = "param != null">
                <if test="param.groupId != null and param.groupId != ''">
                    and group_id like concat(#{param.groupId}, '%')
                </if>
                <if test="param.orgId != null and param.orgId != ''">
                    and org_id like concat(#{param.orgId}, '%')
                </if>
                <if test="param.userId != null and param.userId != ''">
                    and user_id like concat(#{param.userId}, '%')
                </if>
                <if test="param.name != null and param.name != ''">
                    and name like concat(#{param.name}, '%')
                </if>
                <if test="param.avatar != null and param.avatar != ''">
                    and avatar like concat(#{param.avatar}, '%')
                </if>
            </if>
        </where>
        <if test="sorter != null">
            order by
            <trim prefixOverrides=",">
                <choose>
                    <when test="sorter.orgId == 'asc'">
                        , org_id asc
                    </when>
                    <when test="sorter.orgId == 'desc'">
                        , org_id desc
                    </when>
                </choose>
                <choose>
                    <when test="sorter.userId == 'asc'">
                        , user_id asc
                    </when>
                    <when test="sorter.userId == 'desc'">
                        , user_id desc
                    </when>
                </choose>
                <choose>
                    <when test="sorter.name == 'asc'">
                        , name asc
                    </when>
                    <when test="sorter.name == 'desc'">
                        , name desc
                    </when>
                </choose>
                <choose>
                    <when test="sorter.avatar == 'asc'">
                        , avatar asc
                    </when>
                    <when test="sorter.avatar == 'desc'">
                        , avatar desc
                    </when>
                </choose>
        </trim>
        </if>
        limit #{offset}, #{limit}
    </select>
    
    <!--通过分页对象作为筛选条件查询记录条数-->
    <select id="countByPager" resultType="int">
        select
          count(*)

        from imserver.chat_group
        <where>
            <if test = "param != null">
                <if test="param.groupId != null and param.groupId != ''">
                    and group_id like concat(#{param.groupId}, '%')
                </if>
                <if test="param.orgId != null and param.orgId != ''">
                    and org_id like concat(#{param.orgId}, '%')
                </if>
                <if test="param.userId != null and param.userId != ''">
                    and user_id like concat(#{param.userId}, '%')
                </if>
                <if test="param.name != null and param.name != ''">
                    and name like concat(#{param.name}, '%')
                </if>
                <if test="param.avatar != null and param.avatar != ''">
                    and avatar like concat(#{param.avatar}, '%')
                </if>
            </if>
        </where>
    </select>

    

    <!--新增所有列，如果不想在代码层管理ID的生成，则可以将fullColumn改为otherColumn,之后再根据需要改逻辑-->
    <insert id="insert" keyProperty="groupId" useGeneratedKeys="true">
        insert into imserver.chat_group(group_id, org_id, user_id, name, avatar)
        values (#{groupId}, #{orgId}, #{userId}, #{name}, #{avatar})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update imserver.chat_group
        <set>
            <if test="orgId != null and orgId != ''">
                org_id = #{orgId},
            </if>
            <if test="userId != null and userId != ''">
                user_id = #{userId},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="avatar != null and avatar != ''">
                avatar = #{avatar},
            </if>
        </set>
        where group_id = #{groupId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from imserver.chat_group where group_id = #{groupId}
    </delete>

    <!--通过主键数组删除数据-->
    <delete id="deleteByIds">
        delete from imserver.chat_group
        where group_id in
        <foreach collection="array" item="item" open="(" close=")" separator="," index="index">
            #{item}
        </foreach>
    </delete>

</mapper>