<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.berby.im.dao.RoleAuthDao">

    <resultMap type="xyz.berby.im.entity.RoleAuth" id="RoleAuthMap">
        <result property="roleAuthId" column="role_auth_id" jdbcType="VARCHAR"/>
        <result property="roleId" column="role_id" jdbcType="VARCHAR"/>
        <result property="authId" column="auth_id" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RoleAuthMap">
        select
          role_auth_id, role_id, auth_id
        from imserver.role_auth
        where role_auth_id = #{roleAuthId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RoleAuthMap">
        select
          role_auth_id, role_id, auth_id
        from imserver.role_auth
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="RoleAuthMap">
        select
          role_auth_id, role_id, auth_id
        from imserver.role_auth
        <where>
            <if test="roleAuthId != null and roleAuthId != ''">
                and role_auth_id = #{roleAuthId}
            </if>
            <if test="roleId != null and roleId != ''">
                and role_id = #{roleId}
            </if>
            <if test="authId != null and authId != ''">
                and auth_id = #{authId}
            </if>
        </where>
    </select>
    
    <!--通过分页对象作为筛选条件查询-->
    <select id="queryByPager" resultMap="RoleAuthMap">
        select
          role_auth_id, role_id, auth_id
        from imserver.role_auth
        <where>
            <if test = "param != null">
                <if test="param.roleAuthId != null and param.roleAuthId != ''">
                    and role_auth_id like concat(#{param.roleAuthId}, '%')
                </if>
                <if test="param.roleId != null and param.roleId != ''">
                    and role_id like concat(#{param.roleId}, '%')
                </if>
                <if test="param.authId != null and param.authId != ''">
                    and auth_id like concat(#{param.authId}, '%')
                </if>
            </if>
        </where>
        <if test="sorter != null">
            order by
            <trim prefixOverrides=",">
                <choose>
                    <when test="sorter.roleId == 'asc'">
                        , role_id asc
                    </when>
                    <when test="sorter.roleId == 'desc'">
                        , role_id desc
                    </when>
                </choose>
                <choose>
                    <when test="sorter.authId == 'asc'">
                        , auth_id asc
                    </when>
                    <when test="sorter.authId == 'desc'">
                        , auth_id desc
                    </when>
                </choose>
        </trim>
        </if>
        limit #{offset}, #{limit}
    </select>
    
    <!--通过分页对象作为筛选条件查询记录条数-->
    <select id="countByPager" resultType="int">
        select
          count(*)

        from imserver.role_auth
        <where>
            <if test = "param != null">
                <if test="param.roleAuthId != null and param.roleAuthId != ''">
                    and role_auth_id like concat(#{param.roleAuthId}, '%')
                </if>
                <if test="param.roleId != null and param.roleId != ''">
                    and role_id like concat(#{param.roleId}, '%')
                </if>
                <if test="param.authId != null and param.authId != ''">
                    and auth_id like concat(#{param.authId}, '%')
                </if>
            </if>
        </where>
    </select>

    

    <!--新增所有列，如果不想在代码层管理ID的生成，则可以将fullColumn改为otherColumn,之后再根据需要改逻辑-->
    <insert id="insert" keyProperty="roleAuthId" useGeneratedKeys="true">
        insert into imserver.role_auth(role_auth_id, role_id, auth_id)
        values (#{roleAuthId}, #{roleId}, #{authId})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update imserver.role_auth
        <set>
            <if test="roleId != null and roleId != ''">
                role_id = #{roleId},
            </if>
            <if test="authId != null and authId != ''">
                auth_id = #{authId},
            </if>
        </set>
        where role_auth_id = #{roleAuthId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from imserver.role_auth where role_auth_id = #{roleAuthId}
    </delete>

    <!--通过主键数组删除数据-->
    <delete id="deleteByIds">
        delete from imserver.role_auth
        where role_auth_id in
        <foreach collection="array" item="item" open="(" close=")" separator="," index="index">
            #{item}
        </foreach>
    </delete>

</mapper>