
spring.datasource.url=jdbc:mysql://134.175.27.74/imserver
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#初始化连接
#spring.datasource.dbcp2.initial-size = 10
#spring.datasource.dbcp2.max-wait-millis = 10000
#最大空闲连接
#spring.datasource.dbcp2.max-idle=20
#最小空闲连接
#spring.datasource.dbcp2.min-idle=5
#spring.datasource.dbcp2.pool-prepared-statements = true
#spring.datasource.dbcp2.max-open-prepared-statements = 20
#检测数据库的查询语句
#spring.datasource.dbcp2.validation-query = select 1 from dual
#（即在获取Connection对象时检测其可用性）  这样会影响性能，但是这个配置是最有效的。
#spring.datasource.dbcp2.test-on-borrow = true
#设置当连接被归还时，是否要提交所有还未完成的事务
#spring.datasource.dbcp2.test-on-return = false
#有些数据库连接的时候有超时限制（mysql连接在8小时后断开），或者由于网络中断等原因，连接池的连接会出现失效的情况，这时候设置一个testWhileIdle参数为true，可以保证连接池内部定时检测连接的可用性，不可用的连接会被抛弃或者重建，最大情况的保证从连接池中得到的Connection对象是可用的
#spring.datasource.dbcp2.test-while-idle = true
#每隔五分钟检测空闲超过10分钟的连接
#spring.datasource.dbcp2.min-evictable-idle-time-millis = 600000
#spring.datasource.dbcp2.time-between-eviction-runs-millis = 300000

# mybatis
mybatis.type-aliases-package=xyz.berby.im.entity
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# 使用系统默认的JDK代理
spring.aop.proxy-target-class=false

# 设置上传的文件大小
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB



